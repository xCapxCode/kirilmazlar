/**
 * Cache temizleme utility'si
 * Veri tutarsƒ±zlƒ±ƒüƒ± sorunlarƒ±nƒ± √ß√∂zmek i√ßin localStorage'ƒ± temizler
 */

// localStorage'ƒ± tamamen temizle
export const clearAllCache = () => {
    try {
        // T√ºm localStorage'ƒ± temizle
        localStorage.clear();
        
        // SessionStorage'ƒ± da temizle
        sessionStorage.clear();
        
        console.log('üßπ Cache tamamen temizlendi');
        
        // Sayfayƒ± yenile
        window.location.reload();
    } catch (error) {
        console.error('‚ùå Cache temizleme hatasƒ±:', error);
    }
};

// Sadece sipari≈ü cache'ini temizle
export const clearOrderCache = () => {
    try {
        localStorage.removeItem('customer_orders');
        localStorage.removeItem('orders');
        localStorage.removeItem('cart');
        
        console.log('üßπ Sipari≈ü cache temizlendi');
        
        // Sayfayƒ± yenile
        window.location.reload();
    } catch (error) {
        console.error('‚ùå Sipari≈ü cache temizleme hatasƒ±:', error);
    }
};

// Veri tutarlƒ±lƒ±ƒüƒ±nƒ± kontrol et
export const checkDataConsistency = () => {
    try {
        const customerOrders = JSON.parse(localStorage.getItem('customer_orders') || '[]');
        const orders = JSON.parse(localStorage.getItem('orders') || '[]');
        const customers = JSON.parse(localStorage.getItem('customers') || '[]');
        
        console.log('üìä Veri Durumu:');
        console.log('- Customer Orders:', customerOrders.length);
        console.log('- Orders:', orders.length);
        console.log('- Customers:', customers.length);
        
        // M√º≈üteri sipari≈ü sayƒ±larƒ±
        const customerOrderCounts = {};
        customerOrders.forEach(order => {
            const customerId = order.customerId;
            customerOrderCounts[customerId] = (customerOrderCounts[customerId] || 0) + 1;
        });
        
        console.log('üë§ M√º≈üteri Sipari≈ü Sayƒ±larƒ±:', customerOrderCounts);
        
        return {
            customerOrders: customerOrders.length,
            orders: orders.length,
            customers: customers.length,
            customerOrderCounts
        };
    } catch (error) {
        console.error('‚ùå Veri kontrol hatasƒ±:', error);
        return null;
    }
};

// Global window'a ekle (console'dan eri≈üim i√ßin)
if (typeof window !== 'undefined') {
    window.clearAllCache = clearAllCache;
    window.clearOrderCache = clearOrderCache;
    window.checkDataConsistency = checkDataConsistency;
    
    console.log('üîß Cache utilities y√ºklendi:');
    console.log('- window.clearAllCache() - T√ºm cache temizle');
    console.log('- window.clearOrderCache() - Sipari≈ü cache temizle');
    console.log('- window.checkDataConsistency() - Veri durumunu kontrol et');
}